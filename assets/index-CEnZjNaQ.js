(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();const h={X0:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"X",subdivide:0},XO:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"X",subdivide:0},X:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"X",subdivide:0},XH1:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:[/\bH\b|\bH1\b/],panelType:"X",subdivide:1,legConnection:/LEG/},XH2:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:[/\bH\b|\bH1\b/],panelType:"X",subdivide:1,legConnection:/LEG/},XH3:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:/\bR\b|\bR1\b/,secondaryHorizontal:[/\bR1?\b/,/\bH1?\b/,/\bR1?\b/],panelType:"X",subdivide:3,legConnection:/LEG/},XH3A:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:["R3","R2"],secondaryHorizontal:[/\bR4\b/,/\bH1?\b/,/\bR1\b/],panelType:"X",subdivide:3,legConnection:/LEG/},XTR:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:["R3","R1","R2"],secondaryHorizontal:0,panelType:"XD",subdivide:1,legConnection:/LEG/},K:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"A",subdivide:0,legConnection:/LEG/},K1:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR\b|\bR1\b/,secondaryHorizontal:[/\bR\b|\bR2\b/],panelType:"A",subdivide:1,legConnection:/LEG/},K2:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR\b|\bR1\b/,secondaryHorizontal:[/\bR1?\b/],panelType:"A",subdivide:2,legConnection:/LEG/},K2A:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:["R3","R1"],secondaryHorizontal:[/\bR4?\b/,/\bR2?\b/],panelType:"A",subdivide:2,legConnection:/LEG/},DL:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"S",subdivide:0,legConnection:/LEG/},DL0:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"S",subdivide:0,legConnection:/LEG/},DLO:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"S",subdivide:0},DR:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"Z",subdivide:0},DR0:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"Z",subdivide:0},DRO:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"Z",subdivide:0},M:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/\bH1?\b/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"V",subdivide:0},M1:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR2?\b/,secondaryHorizontal:[/\bR1?/],panelType:"V",subdivide:1},M2:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR1?\b/,secondaryHorizontal:[/\bR1?\b/],panelType:"V",subdivide:2},M2A:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:["R4","R2"],secondaryHorizontal:[/\bR3?\b/,/\bR1?\b/],panelType:"V",subdivide:2}};let un=[],dn=[],on=[];Object.keys(h).forEach(e=>{const i=h[e];on.push(e),i.secondaryHorizontal==0?dn.push(e):un.push(e)});let hn=[],an=["RB16.0 235","CHS193.7X5.0 235","EA40X40X5 235","FB40X5 235"],P=[];function mn(e){let i=/EA\d/,n=/CHS\d/,t=/ASX\d/,o=/ASXC\d/,s=/FB\d/,a=/RB\d/,l="",c="User Defined",r="",f=" ",u="",y=0,H="User Defined",m=" ";return En(e),hn.forEach((d,B)=>{i.test(d[0])&&(l="Equal Angle",f="S"),n.test(d[0])&&(l="Pipe",f="S"),s.test(d[0])&&(l="Flat Bar",f="S"),a.test(d[0])&&(l="Solid Round",f="S"),o.test(d[0])&&(l="60° BP Angle",f="S"),t.test(d[0])&&(l="Schifflerized (60° angle)",f="S"),r=d[0],m=`S${d[1]}`;let G=`${l}	${c}	${r}	${f}	${u}	${y}	${H}	${m}
`;x.push(G)}),x=x.join(""),x}function En(e){e.forEach((t,o)=>{if(t.includes("BH")){let s=t[1];t.forEach((a,l)=>{if(a==="FY"){let c=t[l+1];an.push(s+" "+c)}})}});const i=new Set(an);let n=Array.from(i);n=n.map(function(t){return t.replace(/(\d)X(\d)/g,"$1x$2")}),n.forEach(t=>{P.push(t);let o=t.split(" ");hn.push(o)})}let x=[];function yn(e,i){let n=[];return e.forEach((t,o)=>{i.test(t)&&n.push(e[o+1])}),n}function Hn(e,i){let n=[];return i.forEach(t=>{e.forEach((o,s)=>{(o==t||o=="R")&&n.push(e[s+1])})}),n}function Bn(e,i){let n=[];return i.forEach(t=>{e.forEach((o,s)=>{t.test(o)&&n.push(parseInt(e[s+1]))})}),n}function sn(e){return e=e.map(function(i){return i.replace(/(\d)X(\d)/g,"$1x$2")}),e}function Sn(e){let t=e.split(`
`).filter(s=>s.trim()!=="").map(s=>s.replace(/^\s+|\s$/g,"").toUpperCase());return t=sn(t),t.map(s=>s.trim().split(/\s+/))}let Q;function Tn(e){let i=0;return e.forEach(n=>{n.includes("PANEL")&&i++}),Q=i,i}function Cn(e){let i=[];return e.forEach(n=>{n.forEach((t,o)=>{if(t==="HT"){const s=parseFloat(n[o+1]);i.push(s.toFixed(2))}})}),i}function Dn(e){let i=[],n=0;for(let o=0;o<e.length;o++){const s=e[o];(s.join(" ").match(/\$?SECTION\s+\d+/)||s.includes("END"))&&n>0&&(i.push(n),n=0),s.includes("PANEL")&&n++}return[...i].reverse()}function Gn(e){let i=0;return e.forEach(n=>{n.includes("FACES")&&(i=n[n.length-1])}),Rn(e),i}function In(e){let i=0;return e.forEach(n=>{n.includes("WBASE")&&n.forEach((t,o)=>{t==="WBASE"&&(i=n[o+1])})}),i}function Ln(e){let i=[];return e.forEach(t=>{t.includes("FACE")&&t.forEach((o,s)=>{if(o==="FACE"){let a=t[s+1];i.push(a)}})}),[...i].reverse()}function zn(e){let i=[];return e.forEach(t=>{t.includes("TW")?t.forEach((o,s)=>{if(o==="TW"){let a=t[s+1];a=Number(a),isNaN(a)||i.push(a)}}):t.includes("HT")&&i.push(" ")}),[...i].reverse()}let J=[];function Rn(e){e.forEach(i=>{i.join(" ").match(/^(?=.*\bFACE\b)(?=.*\bINVERT|INV(?:ERTED)?\b).*/)?J.unshift(!0):i.join(" ").match(/\bFACE\b/)&&J.unshift(!1)})}let A=[],bn=[],W=!1,E=[];function An(e,i,n,t){return console.log("Panel faces detected from TD",i),console.log("This is the panel faces db",on),i.forEach((o,s)=>{on.includes(o)?(W=!0,ln(o,e,n,t,s,W,J[s])):(W=!1,ln(o,e,n,t,s,W,J[s]))}),A=A.join(),A=A.replaceAll(",",`
`),A}function ln(e,i,n,t,o,s,a){let l="",c,r="";s?(r="OK.",l=h[e].panelType,a?(e=e.replace(/\bK(?=\d)|\bK\b/,"M"),l=h[e].panelType,c=h[e].subdivide,E.push(e)):(l=h[e].panelType,c=h[e].subdivide,E.push(e))):(r="Not OK. Check Manually",a?(e="M2",l=h[e].panelType,c=h[e].subdivide,E.push(e)):e.match(/\bK/)?(e="K2",l=h[e].panelType,c=h[e].subdivide,E.push(e)):(e="X0",l=h[e].panelType,c=h[e].subdivide,E.push(e))),bn.push(r);let f=`${i[o]}	${l}	${c}	${n[o]}	${t[o]}	0	${r}`;A.push(f)}let cn=[],Y=[],rn=[];function Nn(e){let i;return e.forEach(n=>{n.includes("FACE")&&n.forEach((t,o)=>{t=="LEG"&&(i=n[o+1],cn.unshift(i))})}),cn.forEach(n=>{e.forEach(t=>{t.includes(n)&&t.includes("FY")&&t.forEach((o,s)=>{if(o==n){let a=`${t[s+1]} ${t[s+4]}`;Y.push(a)}})})}),Y=sn(Y),Y.forEach(n=>{P.forEach((t,o)=>{t.includes(n)&&rn.push(o+1)})}),rn}let fn=[];function $n(e){e.forEach(t=>{t.includes("FACE")&&t.forEach((o,s)=>{if(o=="BR"||o=="BR1"){let a=t[s+1];fn.unshift(a)}})});let i=[];fn.forEach(t=>{e.forEach(o=>{o.includes("CONNECT")&&o.includes("FY")&&o.forEach((s,a)=>{if(s==t){let l=`${o[a+1]} ${o[a+6]}`;i.push(l)}})})}),i=sn(i);let n=[];return i.forEach(t=>{P.forEach((o,s)=>{o.includes(t)&&n.push(s+1)})}),n}let Z=[],F=[],R=[];function vn(e,i){Object.keys(h).forEach(s=>{h[s].mainHorizontal!=0?Z.push(s):F.push(s)});let n=i;console.log("These are the actual panel faces in the tower:",E),console.log("Panels having horizontals: ",Z),console.log("Panels not having horizontals: ",F),e.forEach((s,a)=>{let l=!1;if(s.includes("FACE")){let c=E[n-1];if(Z.includes(c))s.forEach((r,f)=>{if(r.match(/\bH1?\b/)){let u=parseInt(s[f+1]);R.push([n,u])}});else if(F.includes(c)&&e[a+1].includes("PLAN")){const r=e[a+1];r.forEach((f,u)=>{!r.includes("XIP")&&!r.includes("BTM")?(f=="PB1"||f=="PB")&&R.push([n,parseInt(r[u+1])]):l||(R.push([n,0]),l=!0)})}else F.includes(c)&&R.push([n,0]);n--}}),console.log("Main hor panel Id and panel number: ",R);let t=[];R.forEach(s=>{s[1]===0?t.unshift([s[0],s[1]]):e.forEach(a=>{a.includes(String(s[1]))&&a.includes("CONNECT")&&t.unshift([s[0],`${a[1]} ${a[6]}`])})}),console.log("main horizontal ids and sections",t);let o=[];return t.forEach(s=>{s[1]===0?o.push(0):P.forEach((a,l)=>{a.includes(s[1])&&o.push(l+1)})}),console.log("ASM main horizontals id",o),o}let en=[],tn=[],w=[],V=[];function Mn(e,i){Object.keys(h).forEach(o=>{h[o].secondaryDiagonals==0?tn.push(o):en.push(o)});let n=i;console.log("Actual converted panel faces: ",E),e.forEach((o,s)=>{if(o.includes("FACE")){let a=E[n-1];if(tn.includes(a)&&V.unshift([n,0]),en.includes(a)){if(a=="XH3"||a=="K1"||a=="K2"||a=="M2"){let l=[n,yn(o,h[a].secondaryDiagonals)];V.unshift(l)}if(a=="XH3A"||a=="K2A"||a=="XTR"||a=="M2A"){let l=[n,Hn(o,h[a].secondaryDiagonals)];V.unshift(l)}}n--}});let t=[];return V.forEach((o,s)=>{if(o[1]===0)t.push([0]);else{let a=[];o[1].forEach(l=>{e.forEach(c=>{c.includes(l)&&c.includes("CONNECT")&&a.push(`${c[1]} ${c[6]}`)})}),t.push(a)}}),t.forEach(o=>{if(o[0]==0)w.push(0);else{let s=[];o.forEach(a=>{P.forEach((l,c)=>{l.includes(a)&&s.push(c+1)})}),w.push(s.join())}}),w}function On(e,i){let n=[];Object.keys(h).forEach(l=>{h[l].secondaryHorizontal==0||n.push(l)});let t=[],o=i;e.forEach((l,c)=>{if(l.includes("FACE")){let r=E[o-1];if(n.includes(r)){let f=Bn(l,h[r].secondaryHorizontal);t.unshift([o,f])}else r=="X"||r=="X0"?e[c+1].includes("XIP")||e[c+2].includes("XIP")?e[c+1].forEach((f,u)=>{if(f=="PB"||f=="PB1"){let y=[parseInt(e[c+1][u+1])];t.unshift([o,y])}}):t.unshift([o,0]):t.unshift([o,0]);o--}}),console.log("sec hor panel number and id",t);let s=[];t.forEach((l,c)=>{if(l[1]===0)s.push([0]);else{let r=[];l[1].forEach(f=>{!f==0?e.forEach(u=>{u.includes(String(f))&&u.includes("CONNECT")&&r.push(`${u[1]} ${u[6]}`)}):r.push(0)}),s.push(r)}}),console.log("secondary hor section and grade",s);let a=[];return s.forEach(l=>{if(l[0]==0)a.push(0);else{let c=[];l.forEach(r=>{P.forEach((f,u)=>{f.includes(r)&&c.push(u+1)})}),a.push(c.join())}}),a}function Pn(e,i,n){const t=Nn(e),o=$n(e),s=vn(e,n),a=Mn(e,n),l=On(e,n);let c=[];for(let r=0;r<n;r++){let f=`${i[r]}	${t[r]}	${o[r]}	${s[r]}	${a[r]}	${l[r]}	0	0				${bn[r]}`;c.push(f)}return c=c.join(`
`),c}function b(e){const i=e.split("-");return parseInt(i[0].match(/\d+/))}function g(e){const i=e.split("-");let n;return i[1].length==1||i[1].charAt(i[1].length-1)==0?n=i[1]:n=i[1].slice(0,-1),n=="4"?"Class 4.8":n=="5"?"Class 5.8":n=="6"?"Class 6.8":n=="8"?"Class 8.8":n=="10"?"Class 10.9":"Grade not in ASM DataBase"}function p(e){const i=e.split("-");let n;if(i[1].length==1)n="S.SHEAR";else{const t=i[1].charAt(i[1].length-1);t==2?n="D.SHEAR":t==0?n="S.SHEAR":t=="T"?n="TENSION":n="Error in Connection Type"}return n}function Xn(e,i){let n=[.5],t=0;return console.log("Numbers of panels in each section",i),i.forEach((o,s)=>{t+=o,s!=i.length-1&&n.push(parseFloat(e[t-1])+.5)}),console.log("Section elevations: ",n),n}function jn(e,i,n){let t=[],o=[],s=[],a=[],l=[],c=[],r=[],f=[],u=[],y=[];e.forEach(m=>{if(m.includes("BOLT")&&m.includes("LEG")){const d=m.indexOf("LEG");if(d!==-2&&d<m.length-1){const B=parseInt(m[d+1]);if(!isNaN(B))if(t.unshift(B),B===0){const G=b("M16-8");o.unshift(G);const X=g("M16-8");s.unshift(X);const j=p("M16-8");a.unshift(j)}else{const G=b(m[d+2]);o.unshift(G);const X=g(m[d+2]);s.unshift(X);const j=p(m[d+2]);a.unshift(j)}}}});let H=0;return i.forEach((m,d)=>{l.push(t[H]),c.push(o[H]),r.push(s[H]),f.push(a[H]),t[H]>=8?u.push(4):u.push(2),H+=m}),n.forEach((m,d)=>{const B=`${m}	${f[d]}	${l[d]}	${c[d]}			${r[d]}	YES	${u[d]}	0	NO	0			SINGLE THICK.`;y.push(B)}),y=y.join(`
`),y}function Fn(e,i,n){const t=Xn(i,n);return console.log("panel elevations ",i),jn(e,n,t)}let K=[0];function Kn(e,i){const n=xn(i);return Wn(e,n,i)}function xn(e){return e.forEach((i,n)=>{n<e.length-1&&K.push(i)}),K}function Wn(e,i,n){let t=[],o=[],s=[],a=[],l=[];return e.forEach(c=>{c.join(" ").match(/BOLT.*\bBR1?\b/)&&c.forEach((r,f)=>{if(r.match(/\bBR1?\b/)){const u=parseInt(c[f+1]);if(!isNaN(u)){t.unshift(u);const y=b(c[f+2]);o.unshift(y);const H=g(c[f+2]);s.unshift(H);const m=p(c[f+2]);a.unshift(m)}}})}),i.forEach((c,r)=>{const f=`${c}	${n[r]}	${a[r]}	${t[r]}	${o[r]}			${s[r]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;l.push(f)}),l=l.join(`
`),l}function Yn(e,i){return Vn(e,i)}let U=[];function Vn(e,i){let n=Q;return e.forEach((t,o)=>{if(t.includes("FACE")){const s=E[n-1];Z.includes(s)?Un(s,o,e):F.includes(s)&&qn(s,o,e),n--}}),console.log("Bolt Grade: ",L),console.log("Bolt Bolt Number: ",N),console.log("Bolt Dia: ",I),console.log("Bolt Connection Type: ",z),K.forEach((t,o)=>{const s=`${t}	${i[o]}	${z[o]}	${N[o]}	${I[o]}			${L[o]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;U.push(s)}),U=U.join(`
`),U}let N=[],I=[],L=[],z=[];function Un(e,i,n){for(let t=i;t<i+5;t++)if(n[t].join(" ").match(/BOLT.*\bH1?\b/)){n[t].forEach((o,s)=>{if(o.match(/\bH1?\b/)){const a=parseInt(n[t][s+1]);if(!isNaN(a))if(N.unshift(a),a!=0){const l=n[t][s+2];console.log("This line has direct horizontal bolts: ",n[t-1].join(" "),":For panel face: ",e);const c=b(l);I.unshift(c);const r=g(l);L.unshift(r);const f=p(l);z.unshift(f)}else{const l="M16-8";console.log("This line has 0 horizontal bolts: ",n[t-1].join(" "),":For panel face: ",e);const c=b(l);I.unshift(c);const r=g(l);L.unshift(r);const f=p(l);z.unshift(f)}}});return}else if(n[t].join(" ").match(/\bBOLT\b.*\bLEG\b/)){console.log("this is for 0 bolts on :",e,"on line :",n[t-1].join(" ")),N.unshift(0);const o="M16-8",s=b(o);I.unshift(s);const a=g(o);L.unshift(a);const l=p(o);z.unshift(l)}else if(n[t].join(" ").match(/\bPANEL\b/))return}function qn(e,i,n){for(let t=i;t<i+5;t++)if(n[t].join(" ").match(/\bPLAN\b(?!.*\b(XIP|BTM)\b)/)){console.log("Line currently matched is ",n[t].join(" "),"Panel Face: ",e);for(let o=t;o<t+2;o++)if(n[o].join(" ").match(/\bBOLT.*\bPB1?\b/)){for(let s=0;s<n[o].length;s++)if(n[o][s].match(/\bPB1?\b/)){let a=s;const l=parseInt(n[o][a+1]);if(!isNaN(l)){N.unshift(l);const c=n[o][a+2],r=b(c);I.unshift(r);const f=g(c);L.unshift(f);const u=p(c);z.unshift(u);return}}return}}else if(n[t].join(" ").match(/\bBOLT\b.*\bLEG\b/)){console.log("this is for 0 bolts on :",e,"on line :",n[t-1].join(" ")),N.unshift(0);const o="M16-8",s=b(o);I.unshift(s);const a=g(o);L.unshift(a);const l=p(o);z.unshift(l);return}else if(n[t].join(" ").match(/\bPANEL\b/))return}let S=[],T=[],C=[],D=[],q=[],nn;function kn(e,i,n){return nn=Q,e.forEach((t,o)=>{if(t.includes("FACE")){const s=E[nn-1];if(tn.includes(s)){S.unshift(0);const l="M12-8",c=b(l);C.unshift(c);const r=g(l);T.unshift(r);const f=p(l);D.unshift(f)}else if(en.includes(s)){const a=["XH3","K1","K2","M1","M2"],l=["XH3A","XTR","K2A","M2A"];a.includes(s)?Zn(o,e):l.includes(s)&&Jn(o,e,s)}nn--}}),i.forEach((t,o)=>{const s=`${t}	${n[o]}	${D[o]}	${S[o]}	${C[o]}			${T[o]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;q.push(s)}),q=q.join(`
`),q}function Zn(e,i){for(let n=e;n<e+5;n++)if(i[n].join(" ").match(/\bBOLT\b.*\bR1?\b/)&&i[n].forEach((t,o)=>{if(t.match(/\bR1?\b/)){const s=parseInt(i[n][o+1]);if(!isNaN(s))if(s===0){const a="M12-8";S.unshift(s);const l=b(a);C.unshift(l);const c=g(a);T.unshift(c);const r=p(a);D.unshift(r)}else{const a=i[n][o+2];S.unshift(s);const l=b(a);C.unshift(l);const c=g(a);T.unshift(c);const r=p(a);D.unshift(r)}}}),i[n].join(" ").match(/\bPANEL\b.*\bHT\b/))return}function Jn(e,i,n){for(let t=e;t<e+5;t++){if(i[t].join(" ").match(/\bBOLT\b.*\bR\b/))i[t].forEach((o,s)=>{if(o.match(/\bR\b/)){const a=parseInt(i[t][s+1]);if(!isNaN(a))if(a===0){const l="M12-8";S.unshift(a);const c=b(l);C.unshift(c);const r=g(l);T.unshift(r);const f=p(l);D.unshift(f)}else{const l=i[t][s+2];S.unshift(a);const c=b(l);C.unshift(c);const r=g(l);T.unshift(r);const f=p(l);D.unshift(f)}}});else if(i[t].join(" ").match(/\bBOLT\b.*\bR1\b/)){const o=h[n].secondaryDiagonals[0];i[t].forEach((s,a)=>{if(s==o){const l=parseInt(i[t][a+1]);if(!isNaN(l))if(l===0){const c="M12-8";S.unshift(l);const r=b(c);C.unshift(r);const f=g(c);T.unshift(f);const u=p(c);D.unshift(u)}else{const c=i[t][a+2];S.unshift(l);const r=b(c);C.unshift(r);const f=g(c);T.unshift(f);const u=p(c);D.unshift(u)}return}})}if(i[t].join(" ").match(/\bPANEL\b.*\bHT\b/))return}}let $=[],v=[],M=[],O=[],k=[];const Qn=["XH1","XH3","XH3A","XH2"];function _n(e,i,n){let t=Q;return e.forEach((o,s)=>{if(o.includes("FACE")){const a=E[t-1];un.includes(a)?Qn.includes(a)?wn(e,s):no(e,s,a):dn.includes(a)&&gn(),t--}}),i.forEach((o,s)=>{const a=`${o}	${n[s]}	${O[s]}	${$[s]}	${M[s]}			${v[s]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;k.push(a)}),k=k.join(`
`),k}function wn(e,i){for(let n=i;n<i+5;n++){if(e[n].join(" ").match(/\bBOLT\b.*\bH1?\b/)){e[n].forEach((t,o)=>{if(t.match(/\bH1?\b/)){const s=parseInt(e[n][o+1]);if(!isNaN(s))if(s===0){const a="M12-8";$.unshift(s);const l=b(a);M.unshift(l);const c=g(a);v.unshift(c);const r=p(a);O.unshift(r)}else{const a=e[n][o+2];$.unshift(s);const l=b(a);M.unshift(l);const c=g(a);v.unshift(c);const r=p(a);O.unshift(r)}return}});return}else e[n].join(" ").match(/\bBOLT\b.*\bLEG\b/)&&gn();if(e[n].join(" ").match(/\bPANEL\b.*\bHT\b/))return}}function no(e,i,n){for(let t=i;t<i+5;t++){if(e[t].join(" ").match(/\bBOLT\b.*\bR1?\b/)){const o=h[n].secondaryHorizontal[0];e[t].forEach((s,a)=>{if(s.match(o)){const l=parseInt(e[t][a+1]);if(!isNaN(l))if(l===0){const c="M12-8";$.unshift(l);const r=b(c);M.unshift(r);const f=g(c);v.unshift(f);const u=p(c);O.unshift(u)}else{const c=e[t][a+2];$.unshift(l);const r=b(c);M.unshift(r);const f=g(c);v.unshift(f);const u=p(c);O.unshift(u)}return}})}if(e[t].join(" ").match(/\bPANEL\b.*\bHT\b/))return}}function gn(){$.unshift(0);const i="M12-8",n=b(i);M.unshift(n);const t=g(i);v.unshift(t);const o=p(i);O.unshift(o)}document.getElementById("process-td").addEventListener("click",()=>{const e=document.getElementById("td-text").value;oo(e)});function oo(e){const i=Sn(e),n=In(i),t=Gn(i),o=Tn(i),a=[...Cn(i)].reverse().map(_=>Number(_));let l=[],c=0;a.forEach(_=>{c+=_,l.push(c.toFixed(2))});const r=Dn(i),f=Ln(i),u=zn(i),y=An(l,f,u,a),H=document.getElementById("asm-panel-geometry");H.value=y,document.getElementById("num-of-faces").innerText=`No. of Tower Faces: ${t}`,document.getElementById("base-width").innerText=`Tower Base Width: ${n} m`;const m=mn(i);document.getElementById("asm-selected-sections").value=m;const d=Pn(i,l,o);document.getElementById("asm-panel-sections").value=d;const B=Fn(i,l,r);document.getElementById("asm-leg-connection").value=B;const G=Kn(i,l);document.getElementById("asm-main-diagonal-connection").value=G;const X=Yn(i,l);document.getElementById("asm-main-horizontal-connection").value=X;const j=kn(i,K,l);document.getElementById("asm-secondary-diagonal-connections").value=j;const pn=_n(i,K,l);document.getElementById("asm-secondary-horizontal-connections").value=pn}
